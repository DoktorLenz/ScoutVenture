name: Build and Test Spring

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'spring/**'
      - '.github/workflows/build-and-test.spring.yml'
  pull_request:
    branches:
      - master
    paths:
      - 'spring/**'
      - '.github/workflows/build-and-test.spring.yml'

env:
  JACOCO_ARTIFACT_NAME: jacoco-report


jobs:
  build:
    name: Build Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./spring
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean package -DskipTests

  test-unit:
    name: Unit Test Backend
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    defaults:
      run:
        working-directory: ./spring
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Compile Tests
        run: mvn compiler:compile compiler:testCompile
      
      - name: Run Unit Tests and Upload to Sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn jacoco:prepare-agent surefire:test jacoco:report org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=de.stinner.anmeldetool:backend

      - name: Add unit test coverage to PR
        uses: madrapps/jacoco-report@v1.3
        with:
          paths: ${{ github.workspace }}/spring/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: ${{ vars.SPRING_TOTAL_COVERAGE }}
          min-coverage-changed-files: ${{ vars.SPRING_CHANGED_COVERAGE }}
          title: Spring Unit Test Coverage
          update-comment: true

  test-integration:
    name: Integration Test Backend
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    defaults:
      run:
        working-directory: ./spring
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Compile Tests
        run: mvn compiler:compile compiler:testCompile
      
      - name: Run Integration Tests
        run: mvn jacoco:prepare-agent-integration failsafe:integration-test jacoco:report-integration

      - name: Add integration test coverage to PR
        uses: madrapps/jacoco-report@v1.3
        with:
          paths: ${{ github.workspace }}/spring/target/site/jacoco-it/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: ${{ vars.SPRING_TOTAL_COVERAGE }}
          min-coverage-changed-files: ${{ vars.SPRING_CHANGED_COVERAGE }}
          title: Spring Integration Test Coverage
          update-comment: true

  # lint:
  #   name: Lint Backend
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./spring