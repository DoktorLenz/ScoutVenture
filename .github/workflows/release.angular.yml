name: Release Angular as Dockerimage

concurrency: release

on:
  push:
    tags:
      - v*

env:
  VERSION: ""
  ARTIFACT_NAME: scoutventure-spa

jobs:
  build-angular:
    name: Build Angular App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./angular

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Cache node modules
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js environment
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Clean Distribution Directory
        run: npm run ci:clean

      - name: Build Application
        run: npm run ci:build

      - name: List Files in Distribution Directory
        run: ls -R ./dist

      - name: Upload Build Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: ./angular/dist/**

  build-docker-image:
    name: Build Docker Image and Upload to Registry
    needs: build-angular
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Extract tag name without 'v' prefix and set as env variable
        run: |
          VERSION=$(git describe --tags --abbrev=0 | sed 's/v//')
          echo "VERSION=${VERSION}" >> ${GITHUB_ENV}

      - name: Download Build Artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: ./angular/dist

      - name: List Files in Distribution Directory
        run: ls -R

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY_URL }}
          username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          push: true
          tags: |
            ${{vars.DOCKER_REGISTRY_URL}}/${{ env.ARTIFACT_NAME }}:latest
            ${{vars.DOCKER_REGISTRY_URL}}/${{ env.ARTIFACT_NAME }}:${{ env.VERSION }}
          file: ./docker/angular/Dockerfile
