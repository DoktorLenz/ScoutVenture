name: Release Angular as Dockerimage

concurrency: release

on:
  push:
    tags:
      - v*

env:
  VERSION: ""
  ARTIFACT_NAME: scoutventure-spa

jobs:
  build-angular:
    name: Build Angular App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./angular

    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4

      - name: Cache node modules
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js environment
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Clean Distribution Directory
        run: npm run ci:clean

      - name: Build Application
        run: npm run ci:build

      - name: List Files in Distribution Directory
        run: ls -R ./dist

      - name: Upload Build Artifact
        uses: actions/upload-artifact@694cdabd8bdb0f10b2cea11669e1bf5453eed0a6 # v4
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: ./angular/dist/**

  build-docker-image:
    name: Build Docker Image and Upload to Registry
    needs: build-angular
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4

      - name: Extract tag name without 'v' prefix and set as env variable
        run: |
          VERSION=$(git describe --tags --abbrev=0 | sed 's/v//')
          echo "VERSION=${VERSION}" >> ${GITHUB_ENV}

      - name: Download Build Artifact
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: ./angular/dist

      - name: List Files in Distribution Directory
        run: ls -R

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY_URL }}
          username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5
        with:
          context: .
          push: true
          tags: |
            ${{vars.DOCKER_REGISTRY_URL}}/${{ env.ARTIFACT_NAME }}:latest
            ${{vars.DOCKER_REGISTRY_URL}}/${{ env.ARTIFACT_NAME }}:${{ env.VERSION }}
          file: ./docker/angular/Dockerfile
