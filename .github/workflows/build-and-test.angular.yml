name: Build and Test Angular

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'angular/**'
      - '.github/workflows/build-and-test.angular.yml'
  pull_request:
    branches:
      - master
    paths:
      - 'angular/**'
      - '.github/workflows/build-and-test.angular.yml'

jobs:
  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./angular

    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Clean Distribution Directory
        run: npm run ci:clean

      - name: Set Configuration
        run: npm run config

      - name: Build Application
        run: npm run ci:build

  test-unit:
    name: Unit Test Frontend
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./angular
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Clean Distribution Directory
        run: npm run ci:clean

      - name: Set Configuration
        run: npm run config

      - name: Run Unit Tests
        run: npm run ci:test

      - name: Upload to Sonar
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          projectBaseDir: ./angular

      - name: Upload converage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ github.workspace }}/angular/coverage/cobertura/cobertura-coverage.xml
          flags: Frontend-Unit-Test
          fail_ci_if_error: true
